//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action1044 : AuthorizeAction
    {
        private CLRefreshDailyQuest m_RequestPacket;
        private LCRefreshDailyQuest m_ResponsePacket;
        private int m_UserId;

        public Action1044(ActionGetter actionGetter)
            : base((short)1044, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCRefreshDailyQuest();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLRefreshDailyQuest>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            PlayerDailyQuestLogic pdq = PlayerDailyQuestLogic.GetInstance(m_UserId);
            if (pdq.ResetDailyQuestInfo())
            {
                m_ResponsePacket.DailyQuestInfo = new PBDailyQuestInfo();
                foreach (var trackingQuest in pdq.TrackingDailyQuests)
                {
                    m_ResponsePacket.DailyQuestInfo.TrackingDailyQuests.Add(new PBTrackingDailyQuest()
                    {
                        QuestId = trackingQuest.Key,
                        ProgressCount = trackingQuest.Value.Progress
                    });
                }
                m_ResponsePacket.DailyQuestInfo.CompletedDailyQuests.AddRange(pdq.CompletedDailyQuests);
            }
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
