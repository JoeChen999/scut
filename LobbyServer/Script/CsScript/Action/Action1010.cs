//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action1010 : AuthorizeAction
    {
        private CLHeroStarLevelUp m_RequestPacket;
        private LCHeroStarLevelUp m_ResponsePacket;
        private int m_UserId;

        public Action1010(ActionGetter actionGetter)
            : base((short)1010, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCHeroStarLevelUp();
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLHeroStarLevelUp>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            DTHero heroData = CacheSet.HeroTable.GetData(m_RequestPacket.HeroType);
            PlayerHeroLogic playerHero = new PlayerHeroLogic();
            playerHero.SetUser(m_UserId).SetHero(m_RequestPacket.HeroType);
            if(!playerHero.DataCheck())
            {
                ErrorCode = (int)ErrorType.RequireNotMet;
                ErrorInfo = "wrong HeroId";
                return false;
            }

            Hero myHero = playerHero.GetHeroInfo();
            PlayerPackageLogic package = new PlayerPackageLogic();
            package.SetUser(m_UserId);
            ItemListItem item = new ItemListItem();
            item.Id = heroData.StarLevelUpItemId;
            item.Count = heroData.StarLevelUpItemCount[myHero.HeroStarLevel];
            if (!package.DeductInventory(item))
            {
                ErrorCode = (int)ErrorType.RequireNotMet;
                ErrorInfo = "not enough piece";
                return false;
            }
            playerHero.StarLevelUp();
            myHero = playerHero.GetHeroInfo();
            m_ResponsePacket.LobbyHeroInfo = new PBLobbyHeroInfo()
            {
                Type = m_RequestPacket.HeroType,
                StarLevel = myHero.HeroStarLevel,
                Might = myHero.Might,
            };
            m_ResponsePacket.ItemInfo = new PBItemInfo()
            {
                Type = item.Id,
                Count = package.MyPackage.Inventories[item.Id]
            };
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
