//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action3106 : AuthorizeAction
    {
        private CLSendFriendRequest m_RequestPacket;
        private LCSendFriendRequest m_ResponsePacket;
        private int m_UserId;

        public Action3106(ActionGetter actionGetter)
            : base((short)3106, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCSendFriendRequest();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLSendFriendRequest>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            m_ResponsePacket.PlayerId = m_RequestPacket.FriendCandidatePlayerId;
            PlayerFriendsLogic pf = new PlayerFriendsLogic();
            pf.SetUser(m_RequestPacket.FriendCandidatePlayerId);
            if (!pf.Invited(m_UserId))
            {
                ErrorCode = (int)ErrorType.CannotMakeFriendRequest;
                ErrorInfo = "You can not invite this player";
                return false;
            }
            var target = GameSession.Get(m_RequestPacket.FriendCandidatePlayerId);
            if (target == null)
            {
                return true;
            }
            LCReceiveFriendRequest request = new LCReceiveFriendRequest();
            PlayerLogic p = new PlayerLogic();
            p.SetUser(m_UserId);
            request.Player = new PBPlayerInfo()
            {
                Id = m_UserId,
                Name = p.MyPlayer.Name,
                Level = p.MyPlayer.Level,
                VipLevel = p.MyPlayer.VIPLevel
            };
            byte[] buffer = CustomActionDispatcher.GeneratePackageStream(3107, ProtoBufUtils.Serialize(request));
            target.SendAsync(buffer, 0, buffer.Length);
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
