//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Message;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action1040 : AuthorizeAction
    {
        private CLCheckDisplayName m_RequestPacket;
        private LCCheckDisplayName m_ResponsePacket;
        private int m_UserId;

        public Action1040(ActionGetter actionGetter)
            : base((short)1040, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCCheckDisplayName();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLCheckDisplayName>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            if (m_RequestPacket.DisplayName.Length < 1 || m_RequestPacket.DisplayName.Length > 30)
            {
                ErrorCode = (int)ErrorType.WrongInput;
                ErrorInfo = "wrong length";
                return false;
            }
            if (PlayerLogic.FindUserByName(m_RequestPacket.DisplayName) != null)
            {
                ErrorCode = (int)ErrorType.DuplicateName;
                ErrorInfo = "Duplicate name";
                return false;
            }
            if (ChatProvider.WordServer.IsVerified(m_RequestPacket.DisplayName))
            {
                ErrorCode = (int)ErrorType.HaveBadWord;
                ErrorInfo = "Have bad word";
                return false;
            }
            m_ResponsePacket.Usable = true;
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
