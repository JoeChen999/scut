//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action1101 : AuthorizeAction
    {
        private CLManuallyRefreshCommonShop m_RequestPacket;
        private LCManuallyRefreshCommonShop m_ResponsePacket;
        private int m_UserId;

        public Action1101(ActionGetter actionGetter)
            : base((short)1101, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCManuallyRefreshCommonShop();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLManuallyRefreshCommonShop>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            PlayerDefaultShopLogic pds = new PlayerDefaultShopLogic();
            pds.SetUser(m_UserId);
            PlayerLogic p = new PlayerLogic();
            p.SetUser(m_UserId);
            if (!p.DeductMoney(GameConfigs.GetInt("Default_Shop_Refresh_Cost", 50)))
            {
                ErrorCode = (int)ErrorType.RequireNotMet;
                ErrorInfo = "You have not enough money.";
                return false;
            }
            pds.ResetShopItems();
            var playerShopInfo = pds.GetShopInfo();
            foreach (var shopItem in playerShopInfo.ShopItems)
            {
                m_ResponsePacket.ShopItems.Add(new PBShopItem()
                {
                    TypeId = shopItem.ItemType,
                    Count = shopItem.ItemCount,
                    Currency = shopItem.CurrencyType,
                    PurchasedTimes = shopItem.PurchasedTimes,
                    MaxPurchasedTimes = 1,
                    OriginalPrice = shopItem.OriginalPrice,
                    DiscountedPrice = shopItem.DiscountedPrice,
                });
            }
            m_ResponsePacket.Me = new PBPlayerInfo()
            {
                Id = p.MyPlayer.Id,
                Money = p.MyPlayer.Money
            };
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
