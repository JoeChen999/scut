//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action1039 : AuthorizeAction
    {
        private CLOpenInInstanceChest m_RequestPacket;
        private LCOpenInInstanceChest m_ResponsePacket;
        private int m_UserId;

        public Action1039(ActionGetter actionGetter)
            : base((short)1039, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCOpenInInstanceChest();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLOpenInInstanceChest>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            PlayerInstanceLogic pi = new PlayerInstanceLogic();
            pi.SetUser(m_UserId);
            var dropDict = pi.OpenInInstanceChest(m_RequestPacket.ChestIndex);
            foreach(var goods in dropDict)
            {
                m_ResponsePacket.GoodsInfo.Add(new PBItemInfo()
                {
                    Type = goods.Key,
                    Count = goods.Value
                });
            }
            PlayerPackageLogic pp = new PlayerPackageLogic();
            pp.SetUser(m_UserId);
            PBReceivedItems receivedItems;
            pp.GetItems(dropDict, ReceiveItemMethodType.CompleteInstance, out receivedItems);
            m_ResponsePacket.ReceivedItems = receivedItems;
            PlayerLogic p = new PlayerLogic();
            p.SetUser(m_UserId);
            m_ResponsePacket.PlayerInfo = new PBPlayerInfo()
            {
                Id = p.MyPlayer.Id,
                Coin = p.MyPlayer.Coin,
                Money = p.MyPlayer.Money,
                Spirit = p.MyPlayer.Spirit,
                MeridianEnergy = p.MyPlayer.StarEnergy
            };
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
