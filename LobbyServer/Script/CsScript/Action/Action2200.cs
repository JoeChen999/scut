//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action2200 : AuthorizeAction
    {
        private CLGetChanceInfo m_RequestPacket;
        private LCGetChanceInfo m_ResponsePacket;
        private int m_UserId;

        public Action2200(ActionGetter actionGetter)
            : base((short)2200, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCGetChanceInfo();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLGetChanceInfo>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            m_ResponsePacket.ChanceType = m_RequestPacket.ChanceType;
            PlayerChanceLogic pc = new PlayerChanceLogic();
            pc.SetUserAndType(m_UserId, m_RequestPacket.ChanceType);
            m_ResponsePacket.NextRefreshTime = pc.MyChance.NextRefreshTime;
            m_ResponsePacket.NextFreeTime = pc.MyChance.NextFreeTime;
            foreach (var reward in pc.MyChance.UnopenedChanceRewards)
            {
                PBItemInfo item = new PBItemInfo()
                {
                    Type = reward.Value.ItemId,
                    Count = reward.Value.ItemCount
                };
                m_ResponsePacket.GoodInfo.Add(item);
            }
            foreach (var opened in pc.MyChance.OpenedChanceRewards)
            {
                m_ResponsePacket.OpenedIndex.Add(opened.Key);
                PBItemInfo item = new PBItemInfo()
                {
                    Type = opened.Value.ItemId,
                    Count = opened.Value.ItemCount
                };
                m_ResponsePacket.OpenedGoodInfo.Add(item);
                m_ResponsePacket.GoodInfo.Add(item);
            }
            m_ResponsePacket.FreeChanceTimes = pc.MyChance.TotalFreeCount;
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
