//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action102 : AuthorizeAction
    {
        private CLGetLocalNotifications m_RequestPacket;
        private LCGetLocalNotifications m_ResponsePacket;
        private int m_UserId;

        public Action102(ActionGetter actionGetter)
            : base((short)102, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCGetLocalNotifications();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLGetLocalNotifications>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            DBProvider db = new DBProvider("Game");
            var localNotifications = db.Select("localNotifications", "Name,Time,Message,Status");
            foreach(var ln in localNotifications)
            {
                if((int)ln["Status"] == 1)
                {
                    m_ResponsePacket.RegisterKey.Add((string)ln["Name"]);
                    m_ResponsePacket.RegisterDate.Add((string)ln["Time"]);
                    m_ResponsePacket.RegisterMessage.Add((string)ln["Message"]);
                }
                else
                {
                    m_ResponsePacket.CanceledKey.Add((string)ln["Name"]);
                }
            }
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
