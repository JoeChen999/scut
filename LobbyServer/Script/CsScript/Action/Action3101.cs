//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action3101 : AuthorizeAction
    {
        private CLSearchPlayers m_RequestPacket;
        private LCSearchPlayers m_ResponsePacket;
        private int m_UserId;

        public Action3101(ActionGetter actionGetter)
            : base((short)3101, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCSearchPlayers();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLSearchPlayers>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            List<Player> resPlayers;
            if (m_RequestPacket.HasDisplayId)
            {
                resPlayers = PlayerLogic.FindUserByUUID(m_RequestPacket.DisplayId);
            }
            else
            {
                resPlayers = PlayerLogic.FindUsersByName(m_RequestPacket.Input);
            }
            
            PlayerFriendsLogic pf = new PlayerFriendsLogic();
            pf.SetUser(m_UserId);
            var friends = pf.GetFriends();
            foreach (var player in resPlayers)
            {
                if (player == null)
                {
                    continue;
                }
                m_ResponsePacket.Players.Add(new PBPlayerInfo()
                {
                    Id = player.Id,
                    Name = player.Name,
                    Level = player.Level,
                    VipLevel = player.VIPLevel,
                    LastLoginInTicks = player.LastLoginTime
                });
                if (friends.ContainsKey(player.Id))
                {
                    m_ResponsePacket.IsMyFriend.Add(true);
                }
                else
                {
                    m_ResponsePacket.IsMyFriend.Add(false);
                }
            }
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
