//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action2306 : AuthorizeAction
    {
        private CLGetArenaBattleReport m_RequestPacket;
        private LCGetArenaBattleReport m_ResponsePacket;
        private int m_UserId;

        public Action2306(ActionGetter actionGetter)
            : base((short)2306, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCGetArenaBattleReport();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLGetArenaBattleReport>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            PlayerArenaLogic pa = new PlayerArenaLogic();
            pa.SetUser(m_UserId);
            ArenaRankLogic ar = new ArenaRankLogic();
            PlayerLogic p = new PlayerLogic();
            foreach (var report in pa.MyArena.BattleReports)
            {
                p.SetUser(report.EnemyId);
                PBArenaBattleReport pbreport = new PBArenaBattleReport()
                {
                    BattleEndTime = report.BattleTime,
                    Win = report.IsWin,
                    IsActive = report.IsActive
                };
                pbreport.Enemy = new PBArenaPlayerAndTeamInfo()
                {
                    Rank = ar.GetPlayerRank(report.EnemyId)
                };
                pbreport.Enemy.PlayerInfo = new PBPlayerInfo()
                {
                    Id = report.EnemyId,
                    Name = p.MyPlayer.Name,
                    PortraitType = p.MyPlayer.PortraitType,
                    Level = p.MyPlayer.Level
                };
                m_ResponsePacket.Reports.Add(pbreport);
            }
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
