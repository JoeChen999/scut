//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action2203 : AuthorizeAction
    {
        private CLRefreshChanceInfo m_RequestPacket;
        private LCRefreshChanceInfo m_ResponsePacket;
        private int m_UserId;

        public Action2203(ActionGetter actionGetter)
            : base((short)2203, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCRefreshChanceInfo();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLRefreshChanceInfo>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            m_ResponsePacket.ChanceType = m_RequestPacket.ChanceType;
            PlayerLogic p = new PlayerLogic();
            p.SetUser(m_UserId);
            PlayerChanceLogic pc = new PlayerChanceLogic();
            pc.SetUserAndType(m_UserId, m_RequestPacket.ChanceType);
            if (!pc.ResetRewards(false))
            {
                ErrorCode = (int)ErrorType.RequireNotMet;
                ErrorInfo = "You have not enough money";
                return false;
            }
            m_ResponsePacket.PlayerInfo = new PBPlayerInfo()
            {
                Id = m_UserId,
                Coin = p.MyPlayer.Coin,
                Money = p.MyPlayer.Money
            };
            foreach (var item in pc.MyChance.UnopenedChanceRewards)
            {
                m_ResponsePacket.GoodInfo.Add(new PBItemInfo()
                {
                    Type = item.Value.ItemId,
                    Count = item.Value.ItemCount
                });
            }
            m_ResponsePacket.FreeChanceTimes = pc.MyChance.TotalFreeCount;
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
