//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Com.Rank;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action1303 : AuthorizeAction
    {
        private CLGetSinglePvpRank m_RequestPacket;
        private LCGetSinglePvpRank m_ResponsePacket;
        private int m_UserId;

        public Action1303(ActionGetter actionGetter)
            : base((short)1303, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCGetSinglePvpRank();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLGetSinglePvpRank>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            var rank = RankingFactory.Get<SinglePvpRankUser>("SinglePvpRanking");
            var players = rank.GetRange(0, 100);
            PlayerLogic p = new PlayerLogic();
            foreach(var player in players)
            {
                p.SetUser(player.UserId);
                m_ResponsePacket.PlayerInfo.Add(new PBPlayerInfo()
                {
                    Id = player.UserId,
                    Name = p.MyPlayer.Name,
                    Level = p.MyPlayer.Level,
                    Might = p.MyPlayer.Might,
                    PortraitType = p.MyPlayer.PortraitType,
                });
                m_ResponsePacket.Score.Add(player.Score);
            }
            var Me = rank.Find(r => r.UserId == m_UserId);
            if(Me == null)
            {
                m_ResponsePacket.MyRank = -1;
                m_ResponsePacket.MyScore = 0;
            }
            else
            {
                m_ResponsePacket.MyRank = Me.RankId;
                m_ResponsePacket.MyScore = Me.Score;
            }
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
