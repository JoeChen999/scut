//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action1014 : AuthorizeAction
    {
        private CLGearStrengthen m_RequestPacket;
        private LCGearStrengthen m_ResponsePacket;
        private int m_UserId;

        public Action1014(ActionGetter actionGetter)
            : base((short)1014, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCGearStrengthen();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLGearStrengthen>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            GearLogic gear = new GearLogic();
            gear.SetGear(m_RequestPacket.GearId);
            int materialId = CacheSet.GearTable.GetData(gear.MyGear.TypeId).StrengthenItemId;
            PlayerPackageLogic package = new PlayerPackageLogic();
            package.SetUser(m_UserId);
            if (!package.DeductInventory(new ItemListItem() { Id = materialId, Count = 1 }))
            {
                ErrorCode = (int)ErrorType.RequireNotMet;
                ErrorInfo = "Not enough material";
                return false;
            }
            if (!gear.Strengthen(m_UserId))
            {
                m_ResponsePacket.ItemInfo = new PBItemInfo()
                {
                    Type = materialId,
                    Count = package.MyPackage.Inventories[materialId]
                };
                m_ResponsePacket.LevelUpedGear = null;
                m_ResponsePacket.HeroInfo = null;
                return true;
            }

            if (m_RequestPacket.HeroType > 0)
            {
                PlayerHeroLogic ph = new PlayerHeroLogic();
                ph.SetUser(m_UserId).SetHero(m_RequestPacket.HeroType);
                ph.RefreshMight();
                var heroInfo = ph.GetHeroInfo();
                m_ResponsePacket.HeroInfo = new PBLobbyHeroInfo()
                {
                    Type = heroInfo.HeroType,
                    Might = heroInfo.Might
                };
            }
            m_ResponsePacket.ItemInfo = new PBItemInfo() 
            { 
                Type = materialId, 
                Count = package.MyPackage.Inventories[materialId] 
            };
            m_ResponsePacket.LevelUpedGear = new PBGearInfo() 
            { 
                Id = m_RequestPacket.GearId, 
                Type = gear.MyGear.TypeId, 
                Level = gear.MyGear.Level,
                StrengthenLevel = gear.MyGear.StrengthenLevel
            };
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
