//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action2500 : AuthorizeAction
    {
        private CLOperationActivity m_RequestPacket;
        private LCOperationActivity m_ResponsePacket;
        private int m_UserId;

        public Action2500(ActionGetter actionGetter)
            : base((short)2500, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCOperationActivity();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLOperationActivity>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            var aData = CacheSet.OperationActivityTable.GetData(int.Parse(m_RequestPacket.Params.Find(p => p.Key == "AId").Value));
            Type t = Type.GetType("Genesis.GameServer.LobbyServer." + aData.ProcessorName);
            BaseOpActivityProcessor processor = Activator.CreateInstance(t) as BaseOpActivityProcessor;
            processor.SetUser(m_UserId);
            PBReceivedItems receivedItemds;
            PBPlayerInfo playerInfo;
            List<PBLobbyHeroInfo> heroInfos;
            var resParams = processor.Process(m_RequestPacket.Params, out receivedItemds, out playerInfo, out heroInfos);
            m_ResponsePacket.Params.AddRange(resParams);
            m_ResponsePacket.PlayerInfo = playerInfo;
            //m_ResponsePacket.LobbyHeroInfo.AddRange(heroInfos);
            m_ResponsePacket.ReceivedItems = receivedItemds;
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
