//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// You may need to modify 'TakeAction' method.
// Don't modify the rest unless you know what you're doing.
//----------------------------------------------------------------------------------------------------

using System;
using ZyGames.Framework.Common.Serialization;
using ZyGames.Framework.Game.Contract;
using ZyGames.Framework.Game.Contract.Action;
using ZyGames.Framework.Game.Service;

namespace Genesis.GameServer.LobbyServer
{
    public class Action3104 : AuthorizeAction
    {
        private CLDeleteFriend m_RequestPacket;
        private LCDeleteFriend m_ResponsePacket;
        private int m_UserId;

        public Action3104(ActionGetter actionGetter)
            : base((short)3104, actionGetter)
        {
            m_RequestPacket = null;
            m_ResponsePacket = new LCDeleteFriend();
            m_UserId = 0;
        }

        public override bool GetUrlElement()
        {
            m_UserId = actionGetter.GetSession().UserId;
            m_RequestPacket = ProtoBufUtils.Deserialize<CLDeleteFriend>((byte[])actionGetter.GetMessage());
            return true;
        }

        public override bool TakeAction()
        {
            PlayerFriendsLogic pf = new PlayerFriendsLogic();
            if (!pf.DeleteFriend(m_UserId, m_RequestPacket.PlayerId))
            {
                ErrorCode = (int)ErrorType.CannotOpenChance;
                ErrorInfo = "You don't have this friend";
                return false;
            }
            var target = GameSession.Get(m_RequestPacket.PlayerId);
            if (target != null)
            {
                LCDeleteFriend sendPost = new LCDeleteFriend()
                {
                    DeletedPlayerId = m_UserId,
                    IsActive = false
                };
                byte[] buffer = CustomActionDispatcher.GeneratePackageStream(3104, ProtoBufUtils.Serialize(sendPost));
                target.SendAsync(buffer, 0, buffer.Length);
            }
            

            m_ResponsePacket.DeletedPlayerId = m_RequestPacket.PlayerId;
            m_ResponsePacket.IsActive = true;
            return true;
        }

        public override void WriteResponse(BaseGameResponse response)
        {
            CustomActionDispatcher.ResponseOK(response, actionGetter, ProtoBufUtils.Serialize(m_ResponsePacket));
        }
    }
}
