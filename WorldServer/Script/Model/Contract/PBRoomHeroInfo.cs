//----------------------------------------------------------------------------------------------------
// This code was auto generated by tools.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// Proto source: PBRoomHeroInfo.proto
//----------------------------------------------------------------------------------------------------

using Genesis.GameServer.CommonLibrary;
using ProtoBuf;
using System;
using System.Collections.Generic;

namespace Genesis.GameServer.WorldServer
{
    [Serializable, ProtoContract(Name = @"PBRoomHeroInfo")]
    public partial class PBRoomHeroInfo
    {
        public PBRoomHeroInfo() { }

        private int m_EntityId;
        [ProtoMember(1, Name = @"EntityId", IsRequired = true, DataFormat = DataFormat.TwosComplement)]
        public int EntityId
        {
            get { return m_EntityId; }
            set { m_EntityId = value; }
        }

        private PBLobbyHeroInfo m_LobbyHeroInfo;
        [ProtoMember(2, Name = @"LobbyHeroInfo", IsRequired = true, DataFormat = DataFormat.Default)]
        public PBLobbyHeroInfo LobbyHeroInfo
        {
            get { return m_LobbyHeroInfo; }
            set { m_LobbyHeroInfo = value; }
        }

        private int? m_MaxHP;
        [ProtoMember(3, Name = @"MaxHP", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int MaxHP
        {
            get { return m_MaxHP ?? default(int); }
            set { m_MaxHP = value; }
        }
        public bool HasMaxHP { get { return m_MaxHP != null; } }
        private void ResetMaxHP() { m_MaxHP = null; }
        private bool ShouldSerializeMaxHP() { return HasMaxHP; }

        private int? m_HP;
        [ProtoMember(4, Name = @"HP", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int HP
        {
            get { return m_HP ?? default(int); }
            set { m_HP = value; }
        }
        public bool HasHP { get { return m_HP != null; } }
        private void ResetHP() { m_HP = null; }
        private bool ShouldSerializeHP() { return HasHP; }

        private int? m_Camp;
        [ProtoMember(5, Name = @"Camp", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int Camp
        {
            get { return m_Camp ?? default(int); }
            set { m_Camp = value; }
        }
        public bool HasCamp { get { return m_Camp != null; } }
        private void ResetCamp() { m_Camp = null; }
        private bool ShouldSerializeCamp() { return HasCamp; }

        private int? m_WeaponSuiteId;
        [ProtoMember(6, Name = @"WeaponSuiteId", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int WeaponSuiteId
        {
            get { return m_WeaponSuiteId ?? default(int); }
            set { m_WeaponSuiteId = value; }
        }
        public bool HasWeaponSuiteId { get { return m_WeaponSuiteId != null; } }
        private void ResetWeaponSuiteId() { m_WeaponSuiteId = null; }
        private bool ShouldSerializeWeaponSuiteId() { return HasWeaponSuiteId; }

        private float? m_Speed;
        [ProtoMember(7, Name = @"Speed", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float Speed
        {
            get { return m_Speed ?? default(float); }
            set { m_Speed = value; }
        }
        public bool HasSpeed { get { return m_Speed != null; } }
        private void ResetSpeed() { m_Speed = null; }
        private bool ShouldSerializeSpeed() { return HasSpeed; }

        private int? m_PhysicalAttack;
        [ProtoMember(8, Name = @"PhysicalAttack", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int PhysicalAttack
        {
            get { return m_PhysicalAttack ?? default(int); }
            set { m_PhysicalAttack = value; }
        }
        public bool HasPhysicalAttack { get { return m_PhysicalAttack != null; } }
        private void ResetPhysicalAttack() { m_PhysicalAttack = null; }
        private bool ShouldSerializePhysicalAttack() { return HasPhysicalAttack; }

        private int? m_PhysicalDefense;
        [ProtoMember(9, Name = @"PhysicalDefense", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int PhysicalDefense
        {
            get { return m_PhysicalDefense ?? default(int); }
            set { m_PhysicalDefense = value; }
        }
        public bool HasPhysicalDefense { get { return m_PhysicalDefense != null; } }
        private void ResetPhysicalDefense() { m_PhysicalDefense = null; }
        private bool ShouldSerializePhysicalDefense() { return HasPhysicalDefense; }

        private int? m_MagicAttack;
        [ProtoMember(10, Name = @"MagicAttack", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int MagicAttack
        {
            get { return m_MagicAttack ?? default(int); }
            set { m_MagicAttack = value; }
        }
        public bool HasMagicAttack { get { return m_MagicAttack != null; } }
        private void ResetMagicAttack() { m_MagicAttack = null; }
        private bool ShouldSerializeMagicAttack() { return HasMagicAttack; }

        private int? m_MagicDefense;
        [ProtoMember(11, Name = @"MagicDefense", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int MagicDefense
        {
            get { return m_MagicDefense ?? default(int); }
            set { m_MagicDefense = value; }
        }
        public bool HasMagicDefense { get { return m_MagicDefense != null; } }
        private void ResetMagicDefense() { m_MagicDefense = null; }
        private bool ShouldSerializeMagicDefense() { return HasMagicDefense; }

        private float? m_OppPhysicalDfsReduceRate;
        [ProtoMember(12, Name = @"OppPhysicalDfsReduceRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float OppPhysicalDfsReduceRate
        {
            get { return m_OppPhysicalDfsReduceRate ?? default(float); }
            set { m_OppPhysicalDfsReduceRate = value; }
        }
        public bool HasOppPhysicalDfsReduceRate { get { return m_OppPhysicalDfsReduceRate != null; } }
        private void ResetOppPhysicalDfsReduceRate() { m_OppPhysicalDfsReduceRate = null; }
        private bool ShouldSerializeOppPhysicalDfsReduceRate() { return HasOppPhysicalDfsReduceRate; }

        private float? m_OppMagicDfsReduceRate;
        [ProtoMember(13, Name = @"OppMagicDfsReduceRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float OppMagicDfsReduceRate
        {
            get { return m_OppMagicDfsReduceRate ?? default(float); }
            set { m_OppMagicDfsReduceRate = value; }
        }
        public bool HasOppMagicDfsReduceRate { get { return m_OppMagicDfsReduceRate != null; } }
        private void ResetOppMagicDfsReduceRate() { m_OppMagicDfsReduceRate = null; }
        private bool ShouldSerializeOppMagicDfsReduceRate() { return HasOppMagicDfsReduceRate; }

        private float? m_PhysicalAtkHPAbsorbRate;
        [ProtoMember(14, Name = @"PhysicalAtkHPAbsorbRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float PhysicalAtkHPAbsorbRate
        {
            get { return m_PhysicalAtkHPAbsorbRate ?? default(float); }
            set { m_PhysicalAtkHPAbsorbRate = value; }
        }
        public bool HasPhysicalAtkHPAbsorbRate { get { return m_PhysicalAtkHPAbsorbRate != null; } }
        private void ResetPhysicalAtkHPAbsorbRate() { m_PhysicalAtkHPAbsorbRate = null; }
        private bool ShouldSerializePhysicalAtkHPAbsorbRate() { return HasPhysicalAtkHPAbsorbRate; }

        private float? m_MagicAtkHPAbsorbRate;
        [ProtoMember(15, Name = @"MagicAtkHPAbsorbRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float MagicAtkHPAbsorbRate
        {
            get { return m_MagicAtkHPAbsorbRate ?? default(float); }
            set { m_MagicAtkHPAbsorbRate = value; }
        }
        public bool HasMagicAtkHPAbsorbRate { get { return m_MagicAtkHPAbsorbRate != null; } }
        private void ResetMagicAtkHPAbsorbRate() { m_MagicAtkHPAbsorbRate = null; }
        private bool ShouldSerializeMagicAtkHPAbsorbRate() { return HasMagicAtkHPAbsorbRate; }

        private float? m_PhysicalAtkReflectRate;
        [ProtoMember(16, Name = @"PhysicalAtkReflectRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float PhysicalAtkReflectRate
        {
            get { return m_PhysicalAtkReflectRate ?? default(float); }
            set { m_PhysicalAtkReflectRate = value; }
        }
        public bool HasPhysicalAtkReflectRate { get { return m_PhysicalAtkReflectRate != null; } }
        private void ResetPhysicalAtkReflectRate() { m_PhysicalAtkReflectRate = null; }
        private bool ShouldSerializePhysicalAtkReflectRate() { return HasPhysicalAtkReflectRate; }

        private float? m_MagicAtkReflectRate;
        [ProtoMember(17, Name = @"MagicAtkReflectRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float MagicAtkReflectRate
        {
            get { return m_MagicAtkReflectRate ?? default(float); }
            set { m_MagicAtkReflectRate = value; }
        }
        public bool HasMagicAtkReflectRate { get { return m_MagicAtkReflectRate != null; } }
        private void ResetMagicAtkReflectRate() { m_MagicAtkReflectRate = null; }
        private bool ShouldSerializeMagicAtkReflectRate() { return HasMagicAtkReflectRate; }

        private float? m_DamageReductionRate;
        [ProtoMember(18, Name = @"DamageReductionRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float DamageReductionRate
        {
            get { return m_DamageReductionRate ?? default(float); }
            set { m_DamageReductionRate = value; }
        }
        public bool HasDamageReductionRate { get { return m_DamageReductionRate != null; } }
        private void ResetDamageReductionRate() { m_DamageReductionRate = null; }
        private bool ShouldSerializeDamageReductionRate() { return HasDamageReductionRate; }

        private float? m_CriticalHitProb;
        [ProtoMember(19, Name = @"CriticalHitProb", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float CriticalHitProb
        {
            get { return m_CriticalHitProb ?? default(float); }
            set { m_CriticalHitProb = value; }
        }
        public bool HasCriticalHitProb { get { return m_CriticalHitProb != null; } }
        private void ResetCriticalHitProb() { m_CriticalHitProb = null; }
        private bool ShouldSerializeCriticalHitProb() { return HasCriticalHitProb; }

        private float? m_CriticalHitRate;
        [ProtoMember(20, Name = @"CriticalHitRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float CriticalHitRate
        {
            get { return m_CriticalHitRate ?? default(float); }
            set { m_CriticalHitRate = value; }
        }
        public bool HasCriticalHitRate { get { return m_CriticalHitRate != null; } }
        private void ResetCriticalHitRate() { m_CriticalHitRate = null; }
        private bool ShouldSerializeCriticalHitRate() { return HasCriticalHitRate; }

        private float? m_AntiCriticalHitProb;
        [ProtoMember(21, Name = @"AntiCriticalHitProb", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float AntiCriticalHitProb
        {
            get { return m_AntiCriticalHitProb ?? default(float); }
            set { m_AntiCriticalHitProb = value; }
        }
        public bool HasAntiCriticalHitProb { get { return m_AntiCriticalHitProb != null; } }
        private void ResetAntiCriticalHitProb() { m_AntiCriticalHitProb = null; }
        private bool ShouldSerializeAntiCriticalHitProb() { return HasAntiCriticalHitProb; }

        private int? m_AdditionalDamage;
        [ProtoMember(22, Name = @"AdditionalDamage", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int AdditionalDamage
        {
            get { return m_AdditionalDamage ?? default(int); }
            set { m_AdditionalDamage = value; }
        }
        public bool HasAdditionalDamage { get { return m_AdditionalDamage != null; } }
        private void ResetAdditionalDamage() { m_AdditionalDamage = null; }
        private bool ShouldSerializeAdditionalDamage() { return HasAdditionalDamage; }

        private int? m_ElementId;
        [ProtoMember(23, Name = @"ElementId", IsRequired = false, DataFormat = DataFormat.TwosComplement)]
        public int ElementId
        {
            get { return m_ElementId ?? default(int); }
            set { m_ElementId = value; }
        }
        public bool HasElementId { get { return m_ElementId != null; } }
        private void ResetElementId() { m_ElementId = null; }
        private bool ShouldSerializeElementId() { return HasElementId; }

        private PBTransformInfo m_Transform = null;
        [ProtoMember(24, Name = @"Transform", IsRequired = false, DataFormat = DataFormat.Default)]
        [System.ComponentModel.DefaultValue(null)]
        public PBTransformInfo Transform
        {
            get { return m_Transform; }
            set { m_Transform = value; }
        }

        private float? m_ReducedSkillCoolDownRate;
        [ProtoMember(25, Name = @"ReducedSkillCoolDownRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float ReducedSkillCoolDownRate
        {
            get { return m_ReducedSkillCoolDownRate ?? default(float); }
            set { m_ReducedSkillCoolDownRate = value; }
        }
        public bool HasReducedSkillCoolDownRate { get { return m_ReducedSkillCoolDownRate != null; } }
        private void ResetReducedSkillCoolDownRate() { m_ReducedSkillCoolDownRate = null; }
        private bool ShouldSerializeReducedSkillCoolDownRate() { return HasReducedSkillCoolDownRate; }

        private float? m_HeroSwitchCoolDownRate;
        [ProtoMember(26, Name = @"HeroSwitchCoolDownRate", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float HeroSwitchCoolDownRate
        {
            get { return m_HeroSwitchCoolDownRate ?? default(float); }
            set { m_HeroSwitchCoolDownRate = value; }
        }
        public bool HasHeroSwitchCoolDownRate { get { return m_HeroSwitchCoolDownRate != null; } }
        private void ResetHeroSwitchCoolDownRate() { m_HeroSwitchCoolDownRate = null; }
        private bool ShouldSerializeHeroSwitchCoolDownRate() { return HasHeroSwitchCoolDownRate; }

        private float? m_RecoverHP;
        [ProtoMember(27, Name = @"RecoverHP", IsRequired = false, DataFormat = DataFormat.FixedSize)]
        public float RecoverHP
        {
            get { return m_RecoverHP ?? default(float); }
            set { m_RecoverHP = value; }
        }
        public bool HasRecoverHP { get { return m_RecoverHP != null; } }
        private void ResetRecoverHP() { m_RecoverHP = null; }
        private bool ShouldSerializeRecoverHP() { return HasRecoverHP; }
    }
}
